heap_sort(a, n)
    build_max_heap(a, n);
    swap a[0], a[n]
    for i = a.length / 2 down to 2
        a.heapsize--
        max_heapify(a, i)
max_heapify(a, i)
    l = left(i)
    r = right(i)
    largest = i`
    if l <= a.heapsize and a[l] > a[lar]
        largest = l
    if r <= a.heapsize and a[r] > a[lar]
        largest = r
    if largest != i
        swap a[i] , a[largest]
        max_heapify(a, largest)

build_max_heap(a)
    a.heapsize = a.length
    for i = a.length / 2 down to 1
        max_heapify(a, i)